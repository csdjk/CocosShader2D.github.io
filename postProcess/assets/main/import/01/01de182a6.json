[1,["e3756945-3100-453e-9108-dca9eba22834","c7bfbf98-2169-4156-9276-7b11957b54ce","d87ad5a3-962e-4a2d-a082-37b854072b84","20835ba4-6145-4fbc-a58a-051ce700aa3e@f9941","a3cd009f-0ab0-420d-9278-b9fdab939bbc","1263d74c-8167-4928-91a6-4e2672411f47@fc873","f12a23c4-b924-4322-a260-3d982428f1e8@f9941","620b6bf3-0369-4560-837f-2a2c00b73c26","544e49d6-3f05-4fa8-9a9e-091f98fc2ce8@f9941","951249e0-9f16-456d-8b85-a6ca954da16b@f9941","4c1a6932-c696-41b8-9a79-62f43b66f9f3","1263d74c-8167-4928-91a6-4e2672411f47@801ec","c17ab9e6-69c0-47e9-b919-8b41b3c290fc@6c48a","6960808b-830c-450b-a042-2818e504d51f@6c48a","20835ba4-6145-4fbc-a58a-051ce700aa3e@6c48a","28765e2f-040a-4c65-8e8c-f9d0bb79d863@6c48a","f4111e76-8b92-4fd1-bb74-76c4c4aed4c9@6c48a","45828f25-b50d-4c52-a591-e19491a62b8c@6c48a","544e49d6-3f05-4fa8-9a9e-091f98fc2ce8@6c48a","c8f66d17-351a-48da-a12c-0212d28575c4","77618e22-184d-4fef-bcd1-cffd0c3b09a1@6c48a","89b7dd62-785e-4c8b-a47b-6239a3797917@6c48a","54a53c13-f463-4922-9037-719685b86ea9","7c81de59-b6de-4b4d-8e1b-17c33b4e501f","c73f5554-ce95-4580-9c02-b94bec01d953","a6788e4e-ec82-46ca-8a35-858f58082cb1","94443da6-3b12-4bf5-9995-270ce1118476","13f87372-4a39-442b-aad4-9280c9456386","4e6892ce-ca7e-4552-a3b2-a9829f2ff4a5","db4bd767-a99e-4639-b944-31cd6a204941","2b57b073-a28b-4f3b-95ee-174ac9da356c","bf864a8f-37b8-413f-a6a2-46852d637f7d","5252ab07-0c49-494d-bc82-41533a9ce7d3","62e2b23b-4ee0-4d04-996b-e8059a213e7a","322facfa-a0d0-47cc-9135-3b10b5b18af7","102f90c7-875d-4a74-874d-df8cfc3c3de9","6fcb45ae-53e9-45d2-9563-cdabcbcba878","0e9f5ca1-2924-4a78-a284-9558e76d3f30","d42c77ab-ab17-4eeb-be73-02a232b9d721","1263d74c-8167-4928-91a6-4e2672411f47@2e76e","48716a02-f654-4834-8de0-1666ce1edb8c@7c8b2","1263d74c-8167-4928-91a6-4e2672411f47@17020","d2dfe555-dce4-4a3f-94ce-5d593eff64f5","b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0","6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0","5ad1be7a-df12-429e-8078-15b5154cf778","951249e0-9f16-456d-8b85-a6ca954da16b@6c48a","0855008e-9955-4478-9377-6e8747e8e792","43a66c9f-7f00-4c8c-9773-c3e7f69f48f8","db2d0a8c-c275-4a21-b92b-20591769e7b0","bde82e6d-7033-4b0e-be59-33088021fc31@6c48a","28765e2f-040a-4c65-8e8c-f9d0bb79d863@f9941","cfd3ba32-1b57-4254-b96b-f796e308ea20","45828f25-b50d-4c52-a591-e19491a62b8c@f9941","f12a23c4-b924-4322-a260-3d982428f1e8@6c48a"],["node","_effectAsset","boolPrefab","material","_mesh","colorPrefab","rangeNumberPrefab","root","_spriteFrame","mainTexture","_textureSource","data","_target","_parent","_normalSprite","asset","_hoverSprite","_pressedSprite","_disabledSprite","toggleContainer","_postPropertyControllers","_cameraComponent","scene","value","_envmapHDR","_envmapLDR","_handle","_checkMark"],[["cc.Node",["_name","_layer","_id","_objFlags","__editorExtras__","_components","_lpos","_parent","_children","_prefab","_lrot","_euler","_lscale"],-2,9,5,1,2,4,5,5,5],["MaterialProperty",["name","numberValue","max","type","min","boolValue","sliderCount","colorValue","vectorValue"],-4,12,5],"cc.SpriteFrame","cc.ImageAsset",["cc.Sprite",["_sizeMode","_type","_name","node","__prefab","_spriteFrame","_color"],0,1,4,6,5],["cc.UITransform",["_name","node","__prefab","_contentSize","_anchorPoint"],2,1,4,5,5],["cc.Widget",["_alignFlags","_right","_left","_bottom","_top","_originalWidth","node","__prefab"],-3,1,4],["cc.Button",["_transition","node","_target","_normalSprite","_normalColor","_hoverSprite","_pressedSprite","_disabledSprite","__prefab","clickEvents"],2,1,1,6,5,6,6,6,4,9],["cc.Label",["_string","_actualFontSize","_fontSize","_horizontalAlign","_overflow","_enableWrapText","node","_color","__prefab"],-3,1,5,4],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.Node",["_name","_objFlags","_parent","_components","_lpos"],1,1,2,5],["cc.Node",["_name","_layer","_parent","_components","_prefab","_lpos"],1,1,12,4,5],["cc.Layout",["_layoutType","_spacingY","_isAlign","_spacingX","node","__prefab"],-1,1,4],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.Camera",["_orthoHeight","_far","_clearFlags","_visibility","_near","_usePostProcess","_projection","_priority","node","_color"],-5,1,5],"cc.TextureCube",["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.Prefab",["_name"],2],["cc.ToggleContainer",["node","__prefab"],3,1,4],["cc.CompPrefabInfo",["fileId"],2],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.PrefabInfo",["root","asset","fileId","instance","targetOverrides","nestedPrefabInstanceRoots"],-2,2],["cc.SceneAsset",["_name"],2],["cc.PostProcess",["node"],3,1],["1d8a8y6hUlLRIu+oMwh4Zh1",["_enabled","blurFactor","node","material"],1,1,6],["7e5dbL/NqdPDIxIxjlwbclH",["_enabled","pixelSize","node","material"],1,1,6],["36150yM4atGv5IDobQuZ9hp",["_enabled","pixelSize","node","material"],1,1,6],["5c1eeGOiBtOyJu+WjR/poYi",["_enabled","pixelSize","node","material"],1,1,6],["68e5f47EgdGZrWcMccDmGEL",["_enabled","blurRadius","iteration","node","material"],0,1,6],["c3431/D9mBPxpdwgOfFZtSy",["_enabled","edgeWidth","node","edgeColor","material"],1,1,5,6],["0fa6a96uQxKA5KsxyFJumgt",["_enabled","node","material"],2,1,6],["fbd49ep9WVGvamWRGMyh8GY",["_enabled","vignetteIntensity","vignetteSmoothness","node","vignetteColor","material"],0,1,5,6],["20ce2px78xOipKaLsthzWxI",["_enabled","hueDegree","node","color","material"],1,1,5,6],["7ed57D4MqxEDbYv9RMPUeVJ",["_enabled","focalDistance","blurRadius","iteration","node","material"],-1,1,6],["d0563G3PuZO5r4qzzSETLF/",["node","_postPropertyControllers","postPropertyControllerList","toggleContainer","boolPrefab"],3,1,1,2,1,6],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides"],1,9],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,6],["cc.TargetInfo",["localID"],2],["989dcpoAjNEYJ/QFVapSZkz",["startIndex","node","nodeList"],2,1,2],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo"],3,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",["_enabled","_envmapHDR","_envmapLDR"],2,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",["_sssIntensity"],2],["cc.LightProbeInfo",[],3],["cc.MeshRenderer",["_name","_shadowCastingMode","node","_materials","bakeSettings","_mesh"],1,1,3,4,6],["cc.ModelBakeSettings",["_castShadow","_receiveShadow"],1],["cc.DirectionalLight",["_shadowPcf","node","_color","_staticSettings"],2,1,5,4],["cc.StaticLightSettings",[],3],["00469QEOP9IJ5rzc+aagw6O",["_postName","node","postProcessNode","properties","propertyContainer"],2,1,1,9,1],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["cc.Slider",["node","__prefab","slideEvents","_handle"],3,1,4,9,1],["cc.Toggle",["node","__prefab","_normalColor","_target","_checkMark","_normalSprite"],3,1,4,5,1,1,6]],[[21,0,2],[22,0,1,2,3,4,5,5],[42,0,2],[10,0,2,3,2],[54,0,1,2,3,4,5,3],[55,0,1,3],[58,0,1,2,3,4,2],[1,0,1,2,7,4],[39,0,1,2,2],[17,0,1,2,3,4],[0,0,7,5,6,10,12,11,2],[0,0,1,7,5,9,6,3],[5,1,2,3,4,1],[16,0,1,2,4],[9,0,1,2,3,5],[19,0,2],[5,1,3,1],[5,1,2,3,1],[1,0,3,7,3],[1,0,1,4,2,7,5],[18,0,1,2,3],[1,0,1,4,7,4],[0,0,1,8,5,9,6,3],[23,0,1,2,3,4,5,4],[38,0,1,2,3],[40,0,1,2,3],[8,0,3,1,2,6,8,7,5],[59,0,1,1],[0,0,1,5,9,6,3],[0,0,3,1,7,8,5,6,4],[0,3,4,7,9,3],[0,0,3,1,7,5,4],[0,0,7,5,6,12,2],[0,0,7,5,6,2],[12,0,1,2,4,5,4],[6,0,1,4,6,7,4],[4,1,0,3,5,3],[7,0,1,9,4,2,3,5,6,7,2],[13,0,1,2,3],[8,0,1,2,4,5,6,7,6],[1,0,3,5,7,4],[1,0,3,6,7,8,4],[1,0,4,2,7,4],[1,0,7,2],[1,0,1,7,3],[9,0,1,3],[0,0,2,5,3],[0,3,4,9,3],[0,0,2,8,3],[0,0,2,8,5,3],[0,0,3,1,2,8,5,6,5],[0,0,7,8,6,2],[0,0,2,7,5,10,11,3],[0,0,2,7,5,6,10,11,3],[10,0,1,2,3,4,3],[11,0,1,2,3,4,5,3],[11,0,1,2,3,4,3],[20,0,1,1],[5,1,2,4,1],[5,0,1,2,3,2],[12,0,3,4,5,3],[6,0,2,1,6,4],[6,0,1,3,6,4],[6,0,2,1,3,5,6,6],[6,0,2,6,7,3],[24,0,1,2,3,4,5,6],[25,0,2],[26,0,1],[27,0,1,2,3,3],[28,0,1,2,3,3],[29,0,1,2,3,3],[30,0,1,2,3,3],[31,0,1,2,3,4,4],[32,0,1,2,3,4,3],[33,0,1,2,2],[34,0,1,2,3,4,5,4],[35,0,1,2,3,4,3],[36,0,1,2,3,4,5,5],[37,0,1,2,3,4,1],[41,0,1,2,2],[43,0,1,2,2],[44,0,1,1],[45,0,1,2,3,2],[46,0,1,2,3,4,5,6,1],[47,0,1,2,3,2],[48,0,1],[49,0,1,2,2],[50,1],[51,1],[52,0,2],[53,1],[4,1,0,3,4,5,3],[4,1,0,3,4,6,5,3],[4,0,3,4,2],[4,0,3,4,5,2],[4,2,0,3,4,3],[7,1,8,2,3,5,6,7,1],[7,1,8,4,2,3,1],[13,1],[8,0,3,1,2,6,8,5],[56,0,1,2,3,2],[57,1],[14,0,4,1,2,3,5,8,7],[14,6,7,0,1,2,3,8,9,7],[1,0,3,1,4,2,7,6],[60,0,1,2,3,1],[61,0,1,2,3,4,5,1]],[[[[13,"../Shaders/PixelizeDiamond",[{"hash":2062759052,"name":"../Shaders/PixelizeDiamond|vs|fs","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"PixelSize","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"PixelSize","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n    vec4 texSize;\n    float PixelSize;\n};\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nlayout(location = 0) out vec4 fragColor;\nvec2 DiamondPixelizeUV(vec2 uv)\n{\n  vec2 pixelSize = vec2(10. / PixelSize);\n  vec2 coord = uv * pixelSize;\n  int direction = int(dot(frac(coord), vec2(1., 1.)) >= 1.0) + 2 * int(dot(frac(coord), vec2(1., -1.)) >= 0.0);\n  coord = floor(coord);\n  if (direction == 0) coord += vec2(0., 0.5);\n  if(direction == 1) coord += vec2(0.5, 1.);\n  if(direction == 2) coord += vec2(0.5, 0.);\n  if(direction == 3) coord += vec2(1., 0.5);\n  coord /= pixelSize;\n  return coord;\n}\nvoid main () {\n  vec2 uv = DiamondPixelizeUV(v_uv);\n  fragColor = texture(inputTexture, uv);\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nvarying vec2 v_uv;\n   uniform float PixelSize;\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nvec2 DiamondPixelizeUV(vec2 uv)\n{\n  vec2 pixelSize = vec2(10. / PixelSize);\n  vec2 coord = uv * pixelSize;\n  int direction = int(dot(frac(coord), vec2(1., 1.)) >= 1.0) + 2 * int(dot(frac(coord), vec2(1., -1.)) >= 0.0);\n  coord = floor(coord);\n  if (direction == 0) coord += vec2(0., 0.5);\n  if(direction == 1) coord += vec2(0.5, 1.);\n  if(direction == 2) coord += vec2(0.5, 0.);\n  if(direction == 3) coord += vec2(1., 0.5);\n  coord /= pixelSize;\n  return coord;\n}\nvoid main () {\n  vec2 uv = DiamondPixelizeUV(v_uv);\n  gl_FragColor = texture2D(inputTexture, uv);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","program":"../Shaders/PixelizeDiamond|vs|fs","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":0}]},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[[9,"BG4",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[12,4]],[[[9,"BG2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[13,4]],[[[20,".bin",815868016,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":72464,"length":14280,"count":7140,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":72464,"count":1294,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.49748557806015015,-0.5,-0.4989933371543884],"maxPosition",8,[1,0.49949654936790466,0.5,0.49899348616600037]]],-1],0,0,[],[],[]],[[[20,".bin",2489017538,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":6776,"length":1200,"count":600,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":6776,"count":121,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-5,0,-5],"maxPosition",8,[1,5,0,5]]],-1],0,0,[],[],[]],[[[20,".bin",2837807000,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":73976,"length":12288,"count":6144,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":73976,"count":1321,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-1,-0.5],"maxPosition",8,[1,0.5,1,0.5]]],-1],0,0,[],[],[]],[[[20,".bin",3476720256,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":224,"length":12,"count":6,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":224,"count":4,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,0],"maxPosition",8,[1,0.5,0.5,0]]],-1],0,0,[],[],[]],[[{"name":"default_btn_normal","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[14]],[[{"name":"default_scrollbar_bg","rect":{"x":0,"y":0,"width":30,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":15},"rotated":false,"capInsets":[10,4,10,4],"vertices":{"rawPosition":[-15,-7.5,0,15,-7.5,0,-15,7.5,0,15,7.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,15,30,15,0,0,30,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-15,"y":-7.5,"z":0},"maxPos":{"x":15,"y":7.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[15]],[[[9,"BG1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[16,4]],[[[13,"../Shaders/DepthOfField",[{"hash":4269022113,"name":"../Shaders/DepthOfField|vs|fs-blur","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]},{"name":"screenBlurTexture","type":28,"count":1,"stageFlags":16,"binding":3,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]},{"name":"screenBlurTexture","type":28,"count":1,"stageFlags":16,"binding":3,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n    vec4 texSize;\n    vec4 params;\n    float blurRadius;\n};\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nuniform sampler2D screenBlurTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main()\n{\n  vec4 uvOffset = blurRadius * texSize.xyxy * vec4(-1.0, - 1.0, 1.0, 1.0);\n  vec4 color = texture(inputTexture, v_uv + uvOffset.xy);\n  color += texture(inputTexture, v_uv + uvOffset.zy);\n  color += texture(inputTexture, v_uv + uvOffset.xw);\n  color += texture(inputTexture, v_uv + uvOffset.zw);\n  fragColor = color * 0.25;\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nvarying vec2 v_uv;\n   uniform vec4 texSize;\n   uniform float blurRadius;\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nuniform sampler2D screenBlurTexture;\nvoid main()\n{\n  vec4 uvOffset = blurRadius * texSize.xyxy * vec4(-1.0, - 1.0, 1.0, 1.0);\n  vec4 color = texture2D(inputTexture, v_uv + uvOffset.xy);\n  color += texture2D(inputTexture, v_uv + uvOffset.zy);\n  color += texture2D(inputTexture, v_uv + uvOffset.xw);\n  color += texture2D(inputTexture, v_uv + uvOffset.zw);\n  gl_FragColor = color * 0.25;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]},{"hash":541926831,"name":"../Shaders/DepthOfField|vs|fs-dof","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]},{"name":"screenBlurTexture","type":28,"count":1,"stageFlags":16,"binding":3,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"depthTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]},{"name":"screenBlurTexture","type":28,"count":1,"stageFlags":16,"binding":3,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\nfloat LinearEyeDepth(float depth) {\n  float near = cc_nearFar.x;\n  float far = cc_nearFar.y;\n  float zc0 = (near-far)/near;\n  float zc1 = far/near;\n  vec4 bufferParams = vec4(zc0, zc1, zc0 / far, zc1 / far);\n  float linearDepth = 1.0/(bufferParams.z * depth + bufferParams.w);\n  return linearDepth;\n}\n#endif\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n    vec4 texSize;\n    vec4 params;\n    float blurRadius;\n};\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nuniform sampler2D screenBlurTexture;\n#define FocalDistance params.x\n#define Range params.y\nlayout(location = 0) out vec4 fragColor;\nvoid main () {\n    vec4 blurColor = texture(screenBlurTexture, v_uv);\n    vec4 screenColor = texture(inputTexture, v_uv);\n    float depth = texture(depthTexture, v_uv).r;\n    depth = LinearEyeDepth(depth);\n    float a = depth - FocalDistance;\n    float coc = saturate(a * a / Range);\n    fragColor = mix(screenColor, blurColor, coc);\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nuniform mediump vec4 cc_nearFar;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\nfloat LinearEyeDepth(float depth) {\n  float near = cc_nearFar.x;\n  float far = cc_nearFar.y;\n  float zc0 = (near-far)/near;\n  float zc1 = far/near;\n  vec4 bufferParams = vec4(zc0, zc1, zc0 / far, zc1 / far);\n  float linearDepth = 1.0/(bufferParams.z * depth + bufferParams.w);\n  return linearDepth;\n}\n#endif\nvarying vec2 v_uv;\n   uniform vec4 params;\nuniform sampler2D inputTexture;\nuniform sampler2D depthTexture;\nuniform sampler2D screenBlurTexture;\n#define FocalDistance params.x\n#define Range params.y\nvoid main () {\n    vec4 blurColor = texture2D(screenBlurTexture, v_uv);\n    vec4 screenColor = texture2D(inputTexture, v_uv);\n    float depth = texture2D(depthTexture, v_uv).r;\n    depth = LinearEyeDepth(depth);\n    float a = depth - FocalDistance;\n    float coc = saturate(a * a / Range);\n    gl_FragColor = mix(screenColor, blurColor, coc);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","program":"../Shaders/DepthOfField|vs|fs-blur","rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}},{"pass":"post-process","program":"../Shaders/DepthOfField|vs|fs-dof","rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[{"name":"default_radio_button_on","rect":{"x":1,"y":1,"width":30,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-15,-15,0,15,-15,0,-15,15,0,15,15,0],"indexes":[0,1,2,2,1,3],"uv":[1,31,31,31,1,1,31,1],"nuv":[0.03125,0.03125,0.96875,0.03125,0.03125,0.96875,0.96875,0.96875],"minPos":{"x":-15,"y":-15,"z":0},"maxPos":{"x":15,"y":15,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[17]],[[[15,"ToggleGroupLayout"],[28,"ToggleGroupLayout",33554432,[[57,-2,[0,"54hF349sxJI7JGgqn26lz2"]],[12,-3,[0,"369+3GwkJLHZZMXvQbg6OZ"],[5,0,96],[0,0.5,1]],[34,2,17.7,true,-4,[0,"f34W8A4dlMIIdqLDT2h17l"]],[35,33,30,30,-5,[0,"a8F/GsAbpP/pWPYJelpl6n"]]],[1,"ceCyOMh09OD7ODehynhFnJ",null,null,null,-1,0],[1,930,510,0]]],0,[0,7,1,0,0,1,0,0,1,0,0,1,0,0,1,0,11,1,5],[],[],[]],[[{"name":"default_btn_pressed","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[18]],[[[13,"../Shaders/Blur",[{"hash":2102115561,"name":"../Shaders/Blur|vs|fs","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n  vec4 texSize;\n  float blurRadius;\n};\nuniform sampler2D inputTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main()\n{\n  vec4 uvOffset = blurRadius * texSize.xyxy * vec4(-1.0, - 1.0, 1.0, 1.0);\n  vec4 color = texture(inputTexture, v_uv + uvOffset.xy);\n  color += texture(inputTexture, v_uv + uvOffset.zy);\n  color += texture(inputTexture, v_uv + uvOffset.xw);\n  color += texture(inputTexture, v_uv + uvOffset.zw);\n  fragColor = color * 0.25;\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nvarying vec2 v_uv;\n   uniform vec4 texSize;\n   uniform float blurRadius;\nuniform sampler2D inputTexture;\nvoid main()\n{\n  vec4 uvOffset = blurRadius * texSize.xyxy * vec4(-1.0, - 1.0, 1.0, 1.0);\n  vec4 color = texture2D(inputTexture, v_uv + uvOffset.xy);\n  color += texture2D(inputTexture, v_uv + uvOffset.zy);\n  color += texture2D(inputTexture, v_uv + uvOffset.xw);\n  color += texture2D(inputTexture, v_uv + uvOffset.zw);\n  gl_FragColor = color * 0.25;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]},{"hash":479024365,"name":"../Shaders/Blur|vs|fs1","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"blurRadius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n  vec4 texSize;\n  float blurRadius;\n};\nuniform sampler2D inputTexture;\nlayout(location = 0)out vec4 fragColor;\nvoid main()\n{\n  fragColor = texture(inputTexture, v_uv);\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\nvarying vec2 v_uv;\nuniform sampler2D inputTexture;\nvoid main()\n{\n  gl_FragColor = texture2D(inputTexture, v_uv);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","program":"../Shaders/Blur|vs|fs","rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}},{"pass":"post-process","program":"../Shaders/Blur|vs|fs1","rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[[45,"standard-material",[{"roughness":0.8,"metallic":0.6}]]],0,0,[0],[1],[19]],[[[9,"BG0",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[20,4]],[[[9,"BG3",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[21,4]],[[[66,"Main"],[46,"PostProcess","9ffTaS2nBLuLBLxj5pTha+",[[67,-1],[68,false,1.13,-2,0],[69,false,0.04,-3,1],[70,false,0.69,-4,2],[71,false,0.14,-5,3],[72,false,1.72,3,-6,4],[73,false,0.54,-7,[4,4294967295],5],[74,false,-8,6],[75,false,0.31,0.37,-9,[4,4294901760],7],[76,false,0,-10,[4,4294967295],8],[77,false,15,2,3,-11,9],[78,-24,-23,[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22],-12,44]]],[47,512,{},[23,"07/Dz7SRJHx7glwjQ0atvE",null,null,-25,[24,"29XlN2RtNGC5SIpeBGSk0M",null,[[8,["_lpos"],[2,["07/Dz7SRJHx7glwjQ0atvE"]],[1,500.16,510,0]],[25,459.84,["_right"],[2,["9baG2KbztKb52egfnADc2n"]]]]],43]],[48,"PostListUI","13aFMS5RBLtriZ3q1kmQ1b",[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35]],[49,"Scenes","7bNao2KqlMoZtn/GdWmQSx",[-44,-45,-46,-47,-48,-49,-50],[[80,4,-43,[-36,-37,-38,-39,-40,-41,-42]]]],[50,"Canvas",512,33554432,"0f2Vy+jK1FNIU2VMfgVYTE",[-55,-56,2,-57,-58],[[16,-51,[5,1920,1080]],[81,-53,-52],[61,45,-1.1368683772161603e-13,-1.1368683772161603e-13,-54]],[1,959.9999999999999,540,0]],[82,"Main",[-61,-62,1,4,3,5],[65,null,null,"86d7a0aa-eac3-41db-bb81-c77a76157822",null,null,[-59,-60,2]],[83,[84,0.8,[2,0.8431372549019608,0.9058823529411765,0.9725490196078431,0.520833125],[2,0.452588,0.607642,0.755699,0.8],[2,0.618555,0.577848,0.544564,0]],[85,[4,4283190348]],[86,true,45,46],[87],[88],[89,0],[90]]],[29,"ButtonNext",512,33554432,5,[-68],[[16,-63,[5,100,40]],[36,1,0,-64,11],[37,2,-66,[[38,"989dcpoAjNEYJ/QFVapSZkz","next",4]],[4,4292269782],-65,34,35,36,37],[62,36,100,30,-67]],[1,810,-490,0]],[51,"Dof",4,[-69,-70,-71,-72,-73],[1,0,-0.225,0.549]],[29,"ButtonPrev",512,33554432,5,[-79],[[16,-74,[5,100,40]],[36,1,0,-75,38],[37,2,-77,[[38,"989dcpoAjNEYJ/QFVapSZkz","prev",4]],[4,4292269782],-76,39,40,41,42],[63,12,100,100,30,100,-78]],[1,-810,-490,0]],[30,512,{},5,[23,"ceCyOMh09OD7ODehynhFnJ",null,null,-80,[24,"6b/3oDYztJyaVUs4g9mEuU",null,[[8,["_lpos"],[2,["ceCyOMh09OD7ODehynhFnJ"]],[1,930,510,0]]]],10]],[31,"Label",512,33554432,7,[[16,-81,[5,100,40]],[39,"Next",20,20,1,false,-82,[4,4278190080]]]],[10,"Quad0",4,[[4,"Quad<ModelComponent>",1,-83,[12],[5,true,true],13]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[10,"Quad1",4,[[4,"Quad<ModelComponent>",1,-84,[14],[5,true,true],15]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[10,"Quad2",4,[[4,"Quad<ModelComponent>",1,-85,[16],[5,true,true],17]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[10,"Quad3",4,[[4,"Quad<ModelComponent>",1,-86,[18],[5,true,true],19]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[10,"Quad4",4,[[4,"Quad<ModelComponent>",1,-87,[20],[5,true,true],21]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[10,"Quad5",4,[[4,"Quad<ModelComponent>",1,-88,[22],[5,true,true],23]],[1,-0.4412939120580143,2.007703336530703,0.3624944363670579],[3,-0.14558272139578,-0.012950525925324054,-0.001905842563467843,0.9892594820740307],[1,16,8.999999999999972,0.9999999999999968],[1,-16.743494328248715,-1.500047475793255,-2.238610701399824e-9]],[30,0,{},8,[23,"cfBHxyzexVAbRTSaG5nKVv",null,null,-89,[24,"1b3amJqghFp4Gq3pC25YLe",null,[[25,"Plane",["_name"],[2,["cfBHxyzexVAbRTSaG5nKVv"]]],[8,["_lpos"],[2,["cfBHxyzexVAbRTSaG5nKVv"]],[1,0,-0.647,-4.085]],[8,["_lrot"],[2,["cfBHxyzexVAbRTSaG5nKVv"]],[3,0,-0.7071067811865475,0,0.7071067811865476]],[8,["_euler"],[2,["cfBHxyzexVAbRTSaG5nKVv"]],[1,0,-89.99999999999999,0]],[79,["_materials","0"],[2,["e4gPCN3mxVLZJCq1tILkuZ"]],27],[8,["_lscale"],[2,["31CG1yHTtXFY6t2C78njHg"]],[1,1,1,1]],[25,false,["_active"],[2,["cfBHxyzexVAbRTSaG5nKVv"]]],[8,["_lscale"],[2,["cfBHxyzexVAbRTSaG5nKVv"]],[1,6.895,2.256,12.39]]]],26]],[31,"Label",512,33554432,9,[[16,-90,[5,100,40]],[39,"Prev",20,20,1,false,-91,[4,4278190080]]]],[52,"Main Light","c0y6F5f+pAvI805TdmxIjx",6,[[100,2,-92,[4,4293982975],[101]]],[3,-0.06397656665577071,-0.44608233363525845,-0.8239028751062036,-0.3436591377065261],[1,-117.894,-194.909,38.562]],[53,"Main Camera","c9DMICJLFO5IeO07EPon7U",6,[[102,4.5,0.1,30,14,1822425087,true,-93]],[1,-0.7066882526022811,5.057686106216136,10.497174497850416],[3,-0.14558272139578524,-0.012950525925324542,-0.0019058425634679121,0.9892594820739918],[1,-16.743494328248715,-1.5000474757932547,-2.2385941277281636e-9]],[3,"Blur",3,[-94]],[6,"Blur",22,1,[[7,"blurRadius",1.72,20,[[[4,4278190080],[4,4278255360]],8,8]],[104,"iteration",2,3,1,6,[[[4,4278190080],[4,4278255360]],8,8]]],2],[54,"Camera",512,5,[-95],[1,0,0,1000]],[103,0,1073741824,964.1113490364025,2000,6,41943040,24,[4,4278190080]],[32,"Plane",8,[[4,"Plane<ModelComponent>",1,-96,[24],[5,true,true],25]],[1,0,-0.25,-18.759],[1,2.818,1,5.223]],[32,"Sphere",8,[[4,"Sphere<ModelComponent>",1,-97,[28],[5,true,true],29]],[1,5.067,0.361,-14.259],[1,1.613,1.613,1.613]],[33,"Capsule",8,[[4,"Capsule<ModelComponent>",1,-98,[30],[5,true,true],31]],[1,-4.407,0.088,0.978]],[33,"Capsule-001",8,[[4,"Capsule<ModelComponent>",1,-99,[32],[5,true,true],33]],[1,-0.769,0.088,-3.528]],[3,"RadialBlur",3,[-100]],[6,"RadialBlur",30,1,[[40,"highSample",5,true,[[[4,4278190080],[4,4278255360]],8,8]],[41,"blueCenter",3,2,[[[4,4278190080],[4,4278255360]],8,8],[2,0.5,0.5,0,0]],[7,"blurFactor",1.13,5,[[[4,4278190080],[4,4278255360]],8,8]]],2],[3,"ColorAdjustment",3,[-101]],[6,"ColorAdjustment",32,1,[[18,"color",0,[[[4,4294967295],[4,4279621141],[4,4289667195],[4,4278190279]],8,8,8,8]],[7,"brightness",1,5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[7,"saturation",1,5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[7,"contrast",1,5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[18,"useHue",5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[42,"hueDegree",-180,180,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]]],2],[3,"DepthOfField",3,[-102]],[6,"DepthOfField",34,1,[[7,"focalDistance",15,20,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[7,"range",4,50,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[7,"blurRadius",2,20,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[19,"iteration",3,1,6,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]]],2],[3,"EdgeDetection",3,[-103]],[6,"EdgeDetection",36,1,[[18,"edgeColor",0,[[[4,4278190293],[4,4278247424],[4,4279111182],[4,4294967295]],8,8,8,8]],[19,"edgeWidth",0.54,0.01,5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[43,"edgeLerp",[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]]],2],[3,"GlitchArt",3,[-104]],[6,"GlitchArt",38,1,[[19,"scanLineJitter",0.5,0.01,5,[[[4,4278190080],[4,4278255360]],8,8]],[44,"colorDrift",0.2,[[[4,4278190080],[4,4278255360]],8,8]],[42,"verticalJump",-10,10,[[[4,4278190080],[4,4278255360]],8,8]],[43,"horizontalShake",[[[4,4278190080],[4,4278255360]],8,8]]],2],[3,"PixelizeDiamond",3,[-105]],[6,"PixelizeDiamond",40,1,[[21,"pixelSize",0.14,0.01,[[[4,4278190080],[4,4278255360]],8,8]]],2],[3,"PixelizeHexagonGrid",3,[-106]],[6,"PixelizeHexagonGrid",42,1,[[21,"pixelSize",0.04,0.01,[[[4,4278190080],[4,4278255360]],8,8]],[19,"gridWidth",1,0.01,5,[[[4,4278190080],[4,4278255360]],8,8]]],2],[3,"PixelizeQuad",3,[-107]],[6,"PixelizeQuad",44,1,[[21,"pixelSize",0.69,0.01,[[[4,4278190080],[4,4278255360]],8,8]],[40,"useAutoScreenRatio",5,true,[[[4,4278190080],[4,4278255360]],8,8]],[19,"pixelRatio",1,0.2,5,[[[4,4278190080],[4,4278255360]],8,8]]],2],[3,"Vignette",3,[-108]],[6,"Vignette",46,1,[[18,"vignetteColor",0,[[[4,4279637269],[4,4278242816],[4,4278190286],[4,4292361473]],8,8,8,8]],[41,"vignetteCenter",3,2,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8],[2,0.5,0.5,0,0]],[44,"vignetteIntensity",0.31,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[21,"vignetteSmoothness",0.37,0.01,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]],[18,"rounded",5,[[[4,4278190080],[4,4278255360],[4,4278190335],[4,4294967295]],8,8,8,8]]],2]],0,[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,19,10,0,-1,23,0,-2,31,0,-3,33,0,-4,35,0,-5,37,0,-6,39,0,-7,41,0,-8,43,0,-9,45,0,-10,47,0,20,3,0,0,1,0,7,2,0,-1,22,0,-2,30,0,-3,32,0,-4,34,0,-5,36,0,-6,38,0,-7,40,0,-8,42,0,-9,44,0,-10,46,0,-1,12,0,-2,13,0,-3,14,0,-4,15,0,-5,16,0,-6,17,0,-7,8,0,0,4,0,-1,12,0,-2,13,0,-3,14,0,-4,15,0,-5,16,0,-6,17,0,-7,8,0,0,5,0,21,25,0,0,5,0,0,5,0,-1,24,0,-2,10,0,-4,7,0,-5,9,0,-1,18,0,-2,10,0,-1,20,0,-2,21,0,0,7,0,0,7,0,12,7,0,0,7,0,0,7,0,-1,11,0,-1,26,0,-2,18,0,-3,27,0,-4,28,0,-5,29,0,0,9,0,0,9,0,12,9,0,0,9,0,0,9,0,-1,19,0,7,10,0,0,11,0,0,11,0,0,12,0,0,13,0,0,14,0,0,15,0,0,16,0,0,17,0,7,18,0,0,19,0,0,19,0,0,20,0,0,21,0,-1,23,0,-1,25,0,0,26,0,0,27,0,0,28,0,0,29,0,-1,31,0,-1,33,0,-1,35,0,-1,37,0,-1,39,0,-1,41,0,-1,43,0,-1,45,0,-1,47,0,22,6,1,13,6,2,13,5,3,13,6,4,13,6,5,13,6,108],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,31,31,31,33,33,33,35,35,35,37,37,37,39,39,39,41,41,41,43,43,43,45,45,45,47,47,47],[3,3,3,3,3,3,3,3,3,3,15,8,-1,4,-1,4,-1,4,-1,4,-1,4,-1,4,-1,4,15,23,-1,4,-1,4,-1,4,14,16,17,18,8,14,16,17,18,15,2,24,25,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2],[22,23,24,25,26,27,28,29,30,31,32,3,33,5,34,5,35,5,36,5,37,5,38,5,10,39,40,10,7,41,7,11,7,11,3,3,8,9,3,3,3,8,9,42,0,43,44,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0]],[[[14,"Blur",[{},{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{}]]],0,0,[0],[1],[45]],[[{"name":"default_btn_disabled","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[46]],[[[14,"PixelizeDiamond",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[1],[47]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@e9a6d","back":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@40c10","left":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@8fd34","right":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@74afd","top":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@bb97f","bottom":"b84bbf00-1f96-44b9-8154-820ffa805a0f@b47c0@7d38f"}]}],[15],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[3],0,[],[],[]],[[[14,"DepthOfField",[{},{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{}]]],0,0,[0],[1],[48]],[[[14,"PixelizeQuad",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[1],[49]],[[[15,"ColorItem"],[22,"ColorItem",33554432,[-3,-4,-5],[[17,-2,[0,"1cArlXJ/NCeIrtKtZ5AW+/"],[5,0,0]]],[1,"864g2Fdm5FMLwH7mQ2kXil",null,null,null,-1,0],[1,0,-53.3,0]],[11,"Item",33554432,1,[[17,-6,[0,"b1xrlZB09EaJHK2t4/Qtqz"],[5,20,20]],[91,1,0,-7,[0,"e5qYWJ339G3KGeLIGS6l3i"],0],[96,-9,[0,"0b1+4nWXBHqp51Qpkn13CF"],-8,1,2,3,4]],[1,"a1EeYewGdEtrFSCFOM8eYD",null,null,null,1,0],[1,-90,0,0]],[11,"Layout",33554432,1,[[58,-10,[0,"09OAGBYHFM7r4vvOstMXKS"],[0,0,0.5]],[60,1,3,-11,[0,"faGdpGAR5A971Oof+PI/dY"]]],[1,"43DM3/18dCGawRNK68WMGY",null,null,null,1,0],[1,-99.846,0,0]],[11,"Label",33554432,1,[[12,-12,[0,"86LzIoiYhMkY01bEnEL+7o"],[5,50.029296875,50.4],[0,1,0.5]],[26,"name",0,20,20,-13,[0,"d3AYvqviZONo0PcyuL3dms"],[4,4278190080]]],[1,"acAwq2gbNKd5lqPpNHKKnD",null,null,null,1,0],[1,-115,0,0]]],0,[0,7,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,0,2,0,0,2,0,12,2,0,0,2,0,0,3,0,0,3,0,0,4,0,0,4,0,11,1,13],[0,0,0,0,0],[8,14,16,17,18],[3,3,3,8,9]],[[[13,"../Shaders/Vignette",[{"hash":4271162125,"name":"../Shaders/Vignette|vs|fs","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"params","type":16,"count":1},{"name":"params2","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"params","type":16,"count":1},{"name":"params2","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\n#endif\n#ifndef SHAPE_INCLUDE\n#define SHAPE_INCLUDE\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\n#endif\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\nfloat UniversalMask2D(vec2 uv, vec2 center, float intensity, float roundness, float smoothness) {\n    vec2 d = abs(uv - center) * intensity;\n    d = pow(saturate(d), vec2(roundness));\n    float dist = length(d);\n    float vfactor = pow(saturate(1.0 - dist * dist), smoothness);\n    return vfactor;\n}\n#endif\n#define _VignetteColor params2.xyz\n#define _VignetteCenter params.xy\n#define _VignetteIntensity params.z\n#define _VignetteSmoothness params.w\n#define _VignetteRoundness params2.w\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n  vec4 params;\n  vec4 params2;\n};\nuniform sampler2D inputTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main()\n{\n  vec4 color = texture(inputTexture, v_uv);\n  float vfactor = UniversalMask2D(v_uv, _VignetteCenter, _VignetteIntensity, _VignetteRoundness, _VignetteSmoothness);\n  color.rgb = color.rgb * lerp(_VignetteColor, vec3(1.0), vfactor);\n  fragColor = color;\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\n#endif\n#ifndef SHAPE_INCLUDE\n#define SHAPE_INCLUDE\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\n#endif\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\nfloat saturate(float x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec2 saturate(vec2 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n  return clamp(x, 0.0, 1.0);\n}\nvec4 saturate(vec4 x) {\n  return clamp(x, vec4(0.0), vec4(1.0));\n}\n#endif\nfloat UniversalMask2D(vec2 uv, vec2 center, float intensity, float roundness, float smoothness) {\n    vec2 d = abs(uv - center) * intensity;\n    d = pow(saturate(d), vec2(roundness));\n    float dist = length(d);\n    float vfactor = pow(saturate(1.0 - dist * dist), smoothness);\n    return vfactor;\n}\n#endif\n#define _VignetteColor params2.xyz\n#define _VignetteCenter params.xy\n#define _VignetteIntensity params.z\n#define _VignetteSmoothness params.w\n#define _VignetteRoundness params2.w\nvarying vec2 v_uv;\n   uniform vec4 params;\n   uniform vec4 params2;\nuniform sampler2D inputTexture;\nvoid main()\n{\n  vec4 color = texture2D(inputTexture, v_uv);\n  float vfactor = UniversalMask2D(v_uv, _VignetteCenter, _VignetteIntensity, _VignetteRoundness, _VignetteSmoothness);\n  color.rgb = color.rgb * lerp(_VignetteColor, vec3(1.0), vfactor);\n  gl_FragColor = color;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","program":"../Shaders/Vignette|vs|fs","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":0}]},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[[15,"ValueLayout"],[28,"ValueLayout",33554432,[[12,-2,[0,"97plB0oBZN2JrHrfjBY45B"],[5,0,100],[0,0.5,1]],[34,2,21.3,true,-3,[0,"ecGfPHMHhIpocrtqtaiq5I"]],[35,33,340,30,-4,[0,"9baG2KbztKb52egfnADc2n"]],[27,-5,[0,"00KQEQcOxIrrcllJNiccI+"]]],[1,"07/Dz7SRJHx7glwjQ0atvE",null,null,null,-1,0],[1,620,510,0]]],0,[0,7,1,0,0,1,0,0,1,0,0,1,0,0,1,0,11,1,5],[],[],[]],[[[9,"BG5",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,1],[50,4]],[[[15,"RangeNumberItem"],[22,"RangeNumberItem",33554432,[-7,-8,-9],[[17,-2,[0,"e779SmFTlP+aMAUdFVLk0g"],[5,200,10]],[92,1,0,-3,[0,"a7EW5GJlVBbKXwiXPvnNkH"],[4,4294092653],1],[105,-5,[0,"c6+hBs/7RDO5eiXtPYwDJi"],[[98]],-4],[27,-6,[0,"23BVzLxjRLo6Ig8OadxZ8r"]]],[1,"21PGtvDExBp5pBg0XaDwUb",null,null,null,-1,0],[1,0,-79.6,0]],[55,"Handle",33554432,1,[[[17,-10,[0,"25KYxqqjZKpIFE/rTFScLJ"],[5,16,16]],-11,[97,-13,[0,"5dQzjuWRNJjJemTdR1BkBj"],[4,4292269782],-12,0],[27,-14,[0,"73VWw/QdtAD51aKwW6EZ4C"]]],4,1,4,4],[1,"depTrBczVHArgz4ZsVp19h",null,null,null,1,0],[1,-78.665,0,0]],[11,"Label",33554432,1,[[12,-15,[0,"96mpfbk1dLHITnfjUybV24"],[5,50.029296875,50.4],[0,1,0.5]],[26,"name",0,20,20,-16,[0,"2dyKlSYUhIuYhws9474ww6"],[4,4278190080]]],[1,"b8uT99wNtJtJWIgBZNT68s",null,null,null,1,0],[1,-115,0,0]],[11,"Value",33554432,1,[[12,-17,[0,"2eNriTZQJBwaUSQSlx5gnW"],[5,27.802734375,50.4],[0,0,0.5]],[99,"0.5",0,20,20,-18,[0,"4b60/EszROmqcrXpWi9sa+"]]],[1,"f5Pj9mdWNMZqhLFRARVypB",null,null,null,1,0],[1,115,0,0]],[93,0,2,[0,"89Fxi/EANFnIX2PNH8Z9b2"]]],0,[0,7,1,0,0,1,0,0,1,0,26,5,0,0,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,0,2,0,-2,5,0,12,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,4,0,0,4,0,11,1,18],[0,0,5],[14,8,8],[6,51,6]],[[[13,"../Shaders/PixelizeQuad",[{"hash":891207352,"name":"../Shaders/PixelizeQuad|vs|fs","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\n#define PixelSize params.x\n#define PixelRatio params.y\nin vec2 v_uv;\nlayout(std140) uniform PostUBO {\n  vec4 texSize;\n  vec4 params;\n};\nuniform sampler2D inputTexture;\nlayout(location = 0) out vec4 fragColor;\nfloat2 RectPixelizeUV(float2 uv)\n{\n  float pixelScale = 1.0 / PixelSize;\n  float2 coord = float2(pixelScale * floor(uv.x / (pixelScale)),\n          (pixelScale * PixelRatio) * floor(uv.y / (pixelScale * PixelRatio)));\n  return coord;\n}\nvoid main()\n{\n  float2 uv = RectPixelizeUV(v_uv);\n  fragColor = texture(inputTexture, uv);\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  In.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\n  gl_Position = In.position;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#ifndef COMMON_INCLUDE\n#define COMMON_INCLUDE\n#ifndef HLSL_FUNCTIONS_GLSL\n#define HLSL_FUNCTIONS_GLSL\n#define lerp mix\n#define frac fract\n#define fmod mod\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define _ScreenParams cc_screenSize;\n#endif\n#endif\n#define PixelSize params.x\n#define PixelRatio params.y\nvarying vec2 v_uv;\n   uniform vec4 params;\nuniform sampler2D inputTexture;\nfloat2 RectPixelizeUV(float2 uv)\n{\n  float pixelScale = 1.0 / PixelSize;\n  float2 coord = float2(pixelScale * floor(uv.x / (pixelScale)),\n          (pixelScale * PixelRatio) * floor(uv.y / (pixelScale * PixelRatio)));\n  return coord;\n}\nvoid main()\n{\n  float2 uv = RectPixelizeUV(v_uv);\n  gl_FragColor = texture2D(inputTexture, uv);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","program":"../Shaders/PixelizeQuad|vs|fs","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":0}]},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[[14,"Vignette",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[1],[52]],[[[15,"BoolItem"],[22,"BoolItem",33554432,[-7,-8],[[17,-2,[0,"86ft5UM5tBarpFkwUZerRr"],[5,32,32]],[94,0,-3,[0,"f048UmVPFEvYIV8nhQOajH"],0],[106,-6,[0,"7aDQa3s4BLMLRymxAbvb6W"],[4,4292269782],-5,-4,1]],[1,"302v2JQ25P4oO0xqV0Smm+",null,null,null,-1,0],[1,0,-15.999999999999996,0]],[11,"Label",33554432,1,[[12,-9,[0,"68B20WZMtBzbV1QeGVUStN"],[5,62.255859375,50.4],[0,1,0.5]],[26,"labelzz",2,20,20,-10,[0,"c4BY+UaVJLcrg+tRiFilft"],[4,4278190080]],[64,10,-70.524859375,-11,[0,"8aEOk4Rg5A2aMHb96zY0I1"]]],[1,"d1l6eBpmBCl6+pB9J/xpuV",null,null,null,1,0],[1,-24.269000000000005,0,0]],[56,"Checkmark",33554432,1,[[[59,"Checkmark<UITransformComponent>",-12,[0,"73PV3Mu6dJ4b/pleDqr0xt"],[5,32,32]],-13],4,1],[1,"d1/GMgoJRM/7kzwhkWLpUv",null,null,null,1,0]],[95,"Checkmark<SpriteComponent>",0,3,[0,"c2BE1TCldDX79+RB4fgrDp"]]],0,[0,7,1,0,0,1,0,0,1,0,27,4,0,12,1,0,0,1,0,-1,3,0,-2,2,0,0,2,0,0,2,0,0,2,0,0,3,0,-2,4,0,11,1,13],[0,0,4],[8,14,8],[6,6,53]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"vertices":{"rawPosition":[-13,-13,0,13,-13,0,-13,13,0,13,13,0],"indexes":[0,1,2,2,1,3],"uv":[3,29,29,29,3,3,29,3],"nuv":[0.09375,0.09375,0.90625,0.09375,0.09375,0.90625,0.90625,0.90625],"minPos":{"x":-13,"y":-13,"z":0},"maxPos":{"x":13,"y":13,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[2],0,[0],[10],[54]]]]
