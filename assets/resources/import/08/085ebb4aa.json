[1,["9enl3VNv1NT4UvXQ63Jhex@6c48a","08KpnqwgdIlrLLWtJsttTa"],["_Noisetex","_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[0,0,1,2,4],[1,0,1,2,3,4]],[[[[0,"../Shaders/sprite-distortion",[{"hash":4184993555,"name":"../Shaders/sprite-distortion|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"_Tilling","type":14,"count":1},{"name":"_SpeedFactor","type":14,"count":1},{"name":"_StrengthFactor","type":14,"count":1}],"defines":[]},{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":1,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[{"name":"_Noisetex","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform Constants {\n  vec2 _Tilling;\n  vec2 _SpeedFactor;\n  vec2 _StrengthFactor;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_vertexColor;\nout vec4 v_uv0;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0.xy = a_texCoord;\n  v_uv0.wz = a_texCoord * _Tilling;\n  v_vertexColor = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\n#ifndef COLOR_INCLUDE\n#define COLOR_INCLUDE\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#endif\nlayout(std140) uniform Constants {\n  vec2 _Tilling;\n  vec2 _SpeedFactor;\n  vec2 _StrengthFactor;\n};\nin vec4 v_vertexColor;\nin vec4 v_uv0;\nuniform sampler2D cc_spriteTexture;\nuniform sampler2D _Noisetex;\nvec4 frag() {\n  vec4 noise = texture(_Noisetex, v_uv0.zw + cc_time.xx * _SpeedFactor);\n  noise = noise * 2.0 - 1.0;\n  vec2 uv_temp = v_uv0.xy + noise.xx * _StrengthFactor;\n  vec4 color = texture(cc_spriteTexture, uv_temp);\n  color *= v_vertexColor;\n  ALPHA_TEST(color);\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n     uniform vec2 _Tilling;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_vertexColor;\nvarying vec4 v_uv0;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0.xy = a_texCoord;\n  v_uv0.wz = a_texCoord * _Tilling;\n  v_vertexColor = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\n#ifndef COLOR_INCLUDE\n#define COLOR_INCLUDE\nuniform highp vec4 cc_time;\n#endif\n   uniform vec2 _SpeedFactor;\n   uniform vec2 _StrengthFactor;\nvarying vec4 v_vertexColor;\nvarying vec4 v_uv0;\nuniform sampler2D cc_spriteTexture;\nuniform sampler2D _Noisetex;\nvec4 frag() {\n  vec4 noise = texture2D(_Noisetex, v_uv0.zw + cc_time.xx * _SpeedFactor);\n  noise = noise * 2.0 - 1.0;\n  vec2 uv_temp = v_uv0.xy + noise.xx * _StrengthFactor;\n  vec4 color = texture2D(cc_spriteTexture, uv_temp);\n  color *= v_vertexColor;\n  ALPHA_TEST(color);\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":47,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":48}},"defines":[{"name":"USE_ALPHA_TEST","type":"boolean"}]}],[{"passes":[{"program":"../Shaders/sprite-distortion|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"_Noisetex":{"value":"white","type":28},"_Tilling":{"type":14,"value":[1,1]},"_SpeedFactor":{"type":14,"value":[0.1,0.1]},"_StrengthFactor":{"type":14,"value":[0.1,0.1]}}}]}]]],0,0,[],[],[]],[[[1,"sprite-distortion",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{"alphaThreshold":0},"_Noisetex",6,0]],11]]],0,0,[0,0],[0,1],[0,1]]]]
